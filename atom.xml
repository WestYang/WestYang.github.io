<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨森的学习笔记</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-31T03:20:11.496Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rsyslogd内存占用高解决方案</title>
    <link href="http://example.com/2023/03/31/rsyslogd%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2023/03/31/rsyslogd%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2023-03-31T03:14:11.543Z</published>
    <updated>2023-03-31T03:20:11.496Z</updated>
    
    <content type="html"><![CDATA[<p><strong>解决方法（限制服务内存使用率）</strong></p><p><strong>1、修改rsyslogd服务配置文件</strong></p><p>vim /usr/lib/systemd/system/rsyslog.service</p><p>在Service配置中添加MemoryAccounting=yes，MemoryMax=80M，MemoryHigh=8M三项如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=System Logging Service</span><br><span class="line">;Requires=syslog.socket</span><br><span class="line">Wants=network.target network-online.target</span><br><span class="line">After=network.target network-online.target</span><br><span class="line">Documentation=man:rsyslogd(8)</span><br><span class="line">Documentation=http://www.rsyslog.com/doc/</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">EnvironmentFile=-/etc/sysconfig/rsyslog</span><br><span class="line">ExecStart=/usr/sbin/rsyslogd -n $SYSLOGD_OPTIONS</span><br><span class="line">Restart=on-failure</span><br><span class="line">UMask=0066</span><br><span class="line">StandardOutput=null</span><br><span class="line">Restart=on-failure</span><br><span class="line">MemoryAccounting=yes</span><br><span class="line">MemoryMax=80M</span><br><span class="line">MemoryHigh=8M</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">;Alias=syslog.service</span><br></pre></td></tr></table></figure><p><strong>2、重启服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><p><strong>根本原因</strong></p><p>查看rsyslog输出的日志/var/log/</p><table><thead><tr><th>路径</th><th>描述</th></tr></thead><tbody><tr><td>/var/log/messages</td><td>服务信息日志(记录linux操作系统常见的服务信息和错误信息)</td></tr><tr><td>/var/log/secure</td><td>系统的登陆日志(记录用户和工作组的变化情况,是系统安全日志，用户的认证登陆情况</td></tr><tr><td>/var/log/maillog</td><td>邮件日志</td></tr><tr><td>/var/log/cron</td><td>定时任务</td></tr><tr><td>/var/log/boot.log</td><td>系统启动日志</td></tr></tbody></table><p>发现/var/log/messages有几个G的日志。查看日志内容发现rsyslog把Journal的log都进行的输出和汇总。</p><p>当容器越多时，log也就会也多，内存占用也就越多。</p><p>同时也可能导致systemd-journald内存占用过高</p><p><strong>1、修改Journal的配置/etc/systemd/journald.conf</strong></p><p>把Storage改为none，如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> This file is part of systemd.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#  systemd is free software; you can redistribute it and/or modify it</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> the Free Software Foundation; either version 2.1 of the License, or</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> (at your option) any later version.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Entries in this file show the compile time defaults.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">You can change settings by editing this file.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Defaults can be restored by simply deleting this file.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># See journald.conf(5) for details.</span></span></span><br><span class="line"></span><br><span class="line">[Journal]</span><br><span class="line">Storage=none</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compress=<span class="built_in">yes</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Seal=<span class="built_in">yes</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SplitMode=uid</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SyncIntervalSec=5m</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RateLimitInterval=30s</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RateLimitBurst=1000</span></span><br><span class="line">SystemMaxUse=16M</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SystemKeepFree=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SystemMaxFileSize=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RuntimeMaxUse=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RuntimeKeepFree=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RuntimeMaxFileSize=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxRetentionSec=</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxFileSec=1month</span></span><br><span class="line">ForwardToSyslog=no</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ForwardToKMsg=no</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ForwardToConsole=no</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ForwardToWall=<span class="built_in">yes</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">TTYPath=/dev/console</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxLevelStore=debug</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxLevelSyslog=debug</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxLevelKMsg=notice</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxLevelConsole=info</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MaxLevelWall=emerg</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">LineMax=48K</span></span><br></pre></td></tr></table></figure><p><strong>2、重启生效</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart systemd-journald</span><br></pre></td></tr></table></figure><p><strong>3、Storage选项扩展</strong></p><p>通过查看man手册，#man 5 journald.conf 你会发现，Storage＝的值可以是volatile,persistent, autoandnone，但是，默认的是auto，</p><ul><li>volatile代表日志只存在内存中，即/run/log/journal/</li><li>persistent代表日志只存在磁盘中，即/var/log/journal/</li><li>auto代表日志存在磁盘中，或者内存中，这个取决于你是否创建/var/log/journal/目录！！这个也算是一个坑吧，看来大家都需要手动mkdir -p /var/log/journal/，systemctl restart systemd-journald来解放自己的内存了！！！</li><li>none，表示，日志不保留，全部drop，只有当你决定不使用systemd-journald的时候，你可以使用！</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;解决方法（限制服务内存使用率）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、修改rsyslogd服务配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vim /usr/lib/systemd/system/rsyslog.service&lt;/p&gt;
&lt;p&gt;在Se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ingress-nginx</title>
    <link href="http://example.com/2023/03/27/ingress-nginx/"/>
    <id>http://example.com/2023/03/27/ingress-nginx/</id>
    <published>2023-03-27T05:00:36.807Z</published>
    <updated>2023-04-01T08:01:09.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、K8S暴露服务的方式"><a href="#一、K8S暴露服务的方式" class="headerlink" title="一、K8S暴露服务的方式"></a>一、K8S暴露服务的方式</h2><p>首先，我们知道K8S中暴露service的三种方式：ClusterIP、NodePort与LoadBalance</p><p>这几种方式都是在service的维度提供的，service的作用体现在两个方面，对集群内部，它不断跟踪pod的变化，更新endpoint中对应pod的对象，提供了ip不断变化的pod的服务发现机制，对集群外部，他类似负载均衡器，可以在集群内外部对pod进行访问。但是，<strong>单独用service暴露服务的方式，在实际生产环境中不太合适</strong></p><ul><li>ClusterIP: 这是默认的服务类型，用于在 Kubernetes 集群内部创建一个虚拟 IP 地址，使得在集群内部的其他服务能够通过该 IP 地址访问该服务。这种服务类型仅在 Kubernetes 集群内部使用，并且不会暴露给集群外部。</li><li>NodePort: 这种服务类型会在每个节点上创建一个端口，并将该端口映射到 Kubernetes 服务的端口上。这样一来，集群外部的客户端就可以通过任意一个节点的 IP 地址和该端口号访问该服务。</li><li>LoadBalancer: 这种服务类型通常用于将 Kubernetes 服务暴露给集群外部。它使用外部负载均衡器来自动地将客户端请求分配到 Kubernetes 服务的后端 Pod 上。使用这种服务类型需要一个负载均衡器，例如云服务提供商的负载均衡器或者物理负载均衡器。</li></ul><h2 id="二、什么是ingress"><a href="#二、什么是ingress" class="headerlink" title="二、什么是ingress?"></a>二、什么是ingress?</h2><p>​        ingress可以简单理解为service的service，他通过独立的ingress对象来制定请求转发的规则，把请求路由到一个或多个service中。这样就把服务与请求规则解耦了，可以从业务维度统一考虑业务的暴露，而不用为每个service单独考虑。<br>举个例子，现在集群有api、文件存储、前端3个service，可以通过一个ingress对象来实现图中的请求转发：</p><p><img src="https://raw.githubusercontent.com/WestYang/BlogImage/main/bVbvcFX.png" alt="clipboard.png"></p><p>ingress规则是很灵活的，可以根据不同域名、不同path转发请求到不同的service，并且支持https/http。</p><h2 id="三、为什么要用ingress"><a href="#三、为什么要用ingress" class="headerlink" title="三、为什么要用ingress?"></a>三、为什么要用ingress?</h2><ol><li>简化访问<br>使用 Ingress 可以为多个服务提供一个公共的入口，并通过不同的 URL 路径将流量路由到不同的服务中，从而简化了集群外部的访问。</li><li>简化网络<br>在没有 Ingress 的情况下，每个服务都需要拥有自己的 LoadBalancer，这会增加网络的复杂性和成本。使用 Ingress 可以将多个服务共享一个 LoadBalancer，并且使用不同的 URL 路径进行流量路由，从而简化了网络架构。</li><li>支持 TLS中止<br>Ingress 可以用于终止 HTTPS 流量，并将其转发到后端的服务。这可以让集群中的服务保持安全，而无需在每个服务中配置证书。</li><li>支持负载均衡<br>Ingress 支持多种负载均衡算法，并且可以将流量均衡到多个后端服务中，从而提高了集群的可用性和性能。</li></ol><h2 id="四、ingress与ingress-controller"><a href="#四、ingress与ingress-controller" class="headerlink" title="四、ingress与ingress-controller"></a>四、ingress与ingress-controller</h2><p>要理解ingress，需要区分两个概念，ingress和ingress-controller：</p><ul><li>ingress对象：<br>指的是k8s中的一个api对象，一般用yaml配置。作用是定义请求如何转发到service的规则，可以理解为配置模板。</li><li>ingress-controller：<br>具体实现反向代理及负载均衡的程序，对ingress定义的规则进行解析，根据配置的规则来实现请求转发。</li></ul><p>简单来说，ingress-controller才是负责具体转发的组件，通过各种方式将它暴露在集群入口，外部对集群的请求流量会先到ingress-controller，而ingress对象是用来告诉ingress-controller该如何转发请求，比如哪些域名哪些path要转发到哪些服务等等。</p><h3 id="ingress-controller"><a href="#ingress-controller" class="headerlink" title="ingress-controller"></a>ingress-controller</h3><p>ingress-controller并不是k8s自带的组件，实际上ingress-controller只是一个统称，用户可以选择不同的ingress-controller实现，以下是一些常见的Ingress Controller：</p><ol><li>Ingress nginx Controller：基于Nginx的Ingress Controller，由Kubernetes社区基于Nginx Web服务器开发的，并补充了一组用于实现额外功能的Lua插件。</li><li>Traefik Ingress Controller：基于Traefik的Ingress Controller，可以自动发现新服务、动态配置和自我修复。它还支持多种负载均衡算法和SSL证书管理。</li><li>HAProxy Ingress Controller：基于HAProxy的Ingress Controller，提供了高可用性、SSL终止和多种负载均衡算法。它还支持与Kubernetes的DNS和服务发现集成。</li><li>Istio Ingress Controller：基于Istio的Ingress Controller，提供了强大的流量管理和安全功能，例如流量路由、流量控制和强制性安全。</li><li>Kong Ingress Controller：基于Kong的Ingress Controller，提供了强大的API网关功能和扩展性。它还支持负载均衡、SSL终止和服务发现。</li></ol><h3 id="ingress"><a href="#ingress" class="headerlink" title="ingress"></a>ingress</h3><p>ingress是一个API对象，和其他对象一样，通过yaml文件来配置。ingress通过http或https暴露集群内部service，给service提供外部URL、负载均衡、SSL/TLS能力以及基于host的方向代理。ingress要依靠ingress-controller来具体实现以上功能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、K8S暴露服务的方式&quot;&gt;&lt;a href=&quot;#一、K8S暴露服务的方式&quot; class=&quot;headerlink&quot; title=&quot;一、K8S暴露服务的方式&quot;&gt;&lt;/a&gt;一、K8S暴露服务的方式&lt;/h2&gt;&lt;p&gt;首先，我们知道K8S中暴露service的三种方式：Clus</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/03/27/hello-world/"/>
    <id>http://example.com/2023/03/27/hello-world/</id>
    <published>2023-03-27T04:18:59.121Z</published>
    <updated>2023-03-27T04:56:05.292Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
